SELECT * FROM AUTH;
SELECT * FROM INFO;

-- INNER JOIN
SELECT * FROM INFO INNER JOIN AUTH ON INFO.AUTH_ID=AUTH.AUTH_ID; -- INNER 생략 가능

SELECT INFO.ID
     , INFO.TITLE
     , AUTH.AUTH_ID
     , AUTH.NAME
FROM INFO 
JOIN AUTH ON INFO.AUTH_ID=AUTH.AUTH_ID;

-- 테이블 명이 너무 길 경우 테이블 alias 기능 사용
SELECT * 
FROM INFO I
INNER JOIN AUTH A
ON I.AUTH_ID = A.AUTH_ID;

-- 연결할 키가 같아면 using 구문을 사용할 수 있다.
SELECT *
FROM INFO I
JOIN AUTH A
USING(AUTH_ID);


----------------------------------------------------------------------
-- OUTER JOIN
-- LEFT OUTHER JOIN
SELECT INFO.ID
     , INFO.AUTH_ID
     , INFO.TITLE
     , INFO.CONTENT
     , AUTH.NAME
     , AUTH.JOB 
FROM INFO 
LEFT OUTER JOIN AUTH -- OUTER 생략 가능
ON INFO.AUTH_ID=AUTH.AUTH_ID;

-- RIGHT OUTHER JOIN
-- RIGHT JOIN 의 테이블 자리만 바꾸면 LEFT JOIN이 된다.
SELECT INFO.ID
     , INFO.AUTH_ID
     , INFO.TITLE
     , INFO.CONTENT
     , AUTH.NAME
     , AUTH.JOB 
FROM INFO 
RIGHT OUTER JOIN AUTH 
ON INFO.AUTH_ID=AUTH.AUTH_ID;

-- FULL OUTHER JOIN
SELECT INFO.ID
     , INFO.AUTH_ID
     , INFO.TITLE
     , INFO.CONTENT
     , AUTH.NAME
     , AUTH.JOB 
FROM INFO 
FULL OUTER JOIN AUTH 
ON INFO.AUTH_ID=AUTH.AUTH_ID;