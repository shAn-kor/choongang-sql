-- 제약조건 (컬럼에 의해 데이터 수정, 삭제, 삽입 등 이상을 방지하기 위한 조건
-- PRIMARY KEY - 테이블 고유키, 중복X, NULL(X), PK는 테이블에서 1개
-- NOT NULL - NULL 허용 X
-- UNIQUE KEY - 중복 허용 X, NULL 허용
-- FORIEGN KEY - 참조하는 테이블의 PK를 넣어놓은 키, 중복 허용, NULL 허용, 기본키 아니면 안된다.
-- CHECK - 컬럼의 데이터 제한

-- 전체 제약조건 확인
SELECT * FROM USER_CONSTRAINTS;

-- 열 레벨 제약조건
CREATE TABLE DEPTS (
   DEPT_NO NUMBER(2)       CONSTRAINT DEPTS_DEPT_NO_PK PRIMARY KEY,
   DEPT_NAME VARCHAR(30)   CONSTRAINT DEPTS_DEPT_NAME_NN NOT NULL,
   DEPT_DATE DATE          DEFAULT SYSDATE, -- DEFAULT : 기본값 (제약조건 아님)
   DEPT_PHONE VARCHAR(30)  CONSTRAINT DEPTS_DEPT_PHONE_UK UNIQUE,
   DEPT_GENDER CHAR(1)     CONSTRAINT DEPTS_DEPT_GENDER_CK CHECK(DEPT_GENDER IN ('F','M')),
   LOCA_ID NUMBER(4)       CONSTRAINT DEPTS_LOCA_ID_FK REFERENCES LOCATIONS(LOCATION_ID) -- 외래키
);
DESC DEPTS;

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID) 
VALUES (1, NULL, '010..', 'F', 1700); -- NOT NULL 제약으로 인해 삽입 불가

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID) 
VALUES (1, 'HONG', '010..', 'X', 1700); -- CHECK 제약 위배

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID) 
VALUES (1, 'HONG', '010..', 'F', 100); -- 참조 제약 위배, LOCATION_ID 에 100이 없음

INSERT INTO DEPTS(DEPT_NO, DEPT_NAME, DEPT_PHONE, DEPT_GENDER, LOCA_ID) 
VALUES (1, 'HONG', '010..', 'F', 1700); -- 성공

--------------------------------------------------------------------------
DROP TABLE DEPTS;

-- 테이블 레벨 제약조건 정의
CREATE TABLE DEPTS (
   DEPT_NO NUMBER(2),
   DEPT_NAME VARCHAR(30) NOT NULL, -- 보통 NOT NULL은 열 레벨에서 쓴다.
   DEPT_DATE DATE DEFAULT SYSDATE, -- DEFAULT : 기본값 (제약조건 아님)
   DEPT_PHONE VARCHAR(30),
   DEPT_GENDER CHAR(1),
   LOCA_ID NUMBER(4),
   CONSTRAINT DEPTS_DEPT_NO_PK PRIMARY KEY(DEPT_NO, DEPT_NAME), -- 슈퍼키, 테이블 레벨에서만 지정 가능
   CONSTRAINT DEPTS_DEPT_PHONE_UK UNIQUE (DEPT_PHONE),
   CONSTRAINT DEPTS_DEPT_GENDER_CK CHECK(DEPT_GENDER IN ('F','M')),
   CONSTRAINT DEPTS_LOCA_ID_FK FOREIGN KEY(LOCA_ID) 
      REFERENCES LOCATIONS(LOCATION_ID) -- 외래키
);

----------------------------------------------------------------------------
CREATE TABLE DEPTS (
   DEPT_NO NUMBER(2),
   DEPT_NAME VARCHAR(30), -- 보통 NOT NULL은 열 레벨에서 쓴다.
   DEPT_DATE DATE DEFAULT SYSDATE, -- DEFAULT : 기본값 (제약조건 아님)
   DEPT_PHONE VARCHAR(30),
   DEPT_GENDER CHAR(1),
   LOCA_ID NUMBER(4)
);
DESC DEPTS;
-- ALTER 로 제약조건 추가
-- PK 추가, 슈퍼키도 가능
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_DEPT_NO PRIMARY KEY(DEPT_NO);

-- NOT NULL 은 열 변경 (MODIFY) 로 추가
ALTER TABLE DEPTS MODIFY DEPT_NAME VARCHAR2(30) NOT NULL;

-- UNIQUE
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_DEPT_PHONE UNIQUE (DEPT_PHONE);

-- FK 추가
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_LOCA_ID_FK FOREIGN KEY (LOCA_ID)
   REFERENCES LOCATIONS(LOCATION_ID);
   
-- CHECK 추가
ALTER TABLE DEPTS ADD CONSTRAINT DEPT_DEPT_GENDER_CK CHECK(DEPT_GENDER IN ('F', 'M'));

-- 제약조건 삭제
ALTER TABLE DEPTS DROP CONSTRAINT DEPT_DEPT_GENDER_CK;

-------------------------------------------------------------------------------
--문제1.
--다음과 같은 테이블을 생성하고 데이터를 insert해보세요.
--테이블 제약조건은 아래와 같습니다. 
--조건) M_NAME 는 가변문자형 20byte, 널값을 허용하지 않음
--조건) M_NUM 은 숫자형 5자리, PRIMARY KEY 이름(mem_memnum_pk) 
--조건) REG_DATE 는 날짜형, 널값을 허용하지 않음, UNIQUE KEY 이름:(mem_regdate_uk)
--조건) GENDER 고정문자형 1byte, CHECK제약 (M, F)
--조건) LOCA 숫자형 4자리, FOREIGN KEY ? 참조 locations테이블(location_id) 이름:(mem_loca_loc_locid_fk)
--| M_NAME | M_NUM | REG_DATE | GENDER | LOCA |
--| --- | --- | --- | --- | --- |
--| AAA | 1 | 2018-07-01 | M | 1800 |
--| BBB | 2 | 2018-07-02 | F | 1900 |
--| CCC | 3 | 2018-07-03 | M | 2000 |
--| DDD | 4 | 오늘날짜 | M | 2000 |
CREATE TABLE TABLE1 (
   M_NAME VARCHAR(20) NOT NULL,
   M_NUM NUMBER(5) CONSTRAINT MEM_MEMNUM_PK PRIMARY KEY,
   REG_DATE DATE CONSTRAINT MEM_REGDATE_UK UNIQUE,
   GENDER CHAR(1) CONSTRAINT GENDER_CHK CHECK(GENDER IN ('F','M')),
   LOCA NUMBER(4) CONSTRAINT MEM_LOCA_LOC_LOCID_FK REFERENCES LOCATIONS(LOCATION_ID)
);
DESC TABLE1;
INSERT INTO TABLE1 VALUES('AAA', 1, '2018-07-01', 'M', 1800);
INSERT INTO TABLE1 VALUES('BBB', 2, '2018-07-02', 'F', 1900);
INSERT INTO TABLE1 VALUES('CCC', 3, '2018-07-03', 'M', 2000);
INSERT INTO TABLE1 VALUES('DDD', 4, SYSDATE, 'F', 2000);
SELECT * FROM TABLE1;

--문제2.
--
--도서 대여 이력 테이블을 생성하려 합니다.
--도서 대여 이력 테이블은
--대여번호(숫자) PK, 대출도서번호(문자), 대여일(날짜), 반납일(날짜), 반납여부(Y/N)
--를 가집니다.
--적절한 테이블을 생성해 보세요.
CREATE TABLE TABLE2 (
   B_NUM NUMBER(4) CONSTRAINT B_NUM_PK PRIMARY KEY,
   BOOK_NUM VARCHAR(10) NOT NULL,
   B_DATE DATE DEFAULT SYSDATE,
   R_DATE DATE DEFAULT SYSDATE+7,
   R_CHK CHAR(1) CONSTRAINT  R_CHK_CHK CHECK(R_CHK IN ('Y','N'))
);